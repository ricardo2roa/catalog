type ProductConnection{
    edges:[Edge]
    pageInfo: PageInfo
    totalCount: Int
}
type Edge{
     cursor: String
     node: Product
}
type PageInfo{
    startCursor:String
    endCursor:String
    hasPreviousPage:Boolean
    hasNextPage:Boolean
}
type Brand{
    code: Int
    name: String
    locked: Boolean
    disabled: Boolean
    dateCreated: String
}

type Tag{
    code: Int
    name: String
    locked: Boolean
    disabled: Boolean
    dateCreated: String
}

type Category{
    code: Int
    name: String
    locked: Boolean
    disabled: Boolean
    dateCreated: String
}

type Information{
    benefits: String
    feature: String
    description: String
}

type Reference{
    peso: Int
    precio: Int
    sku: String
    stock: Int
}
type Product{
    id:ID!
    code:Int!
    tag:Tag!
    brand:Brand!
    category:Category!
    name:String!
    information:Information!
    references:[Reference]!
}

type Query{
    allProducts(first:Int!, after:String):ProductConnection
    getProductById(id:String):Product
}
